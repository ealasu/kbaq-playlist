// Generated by CoffeeScript 1.3.3
(function() {
  var express, getPlaylist, getPlaylistUrl, jsdom, parsePlaylist, partitionBy, request, time, _;

  express = require('express');

  request = require('request');

  jsdom = require('jsdom');

  _ = require('underscore');

  time = require('time')(Date);

  require('datejs');

  partitionBy = function(obj, val) {
    var last, lastVal, result;
    last = [];
    result = [last];
    lastVal = null;
    _.each(obj, function(value, index) {
      var currentVal;
      currentVal = val(value);
      if (currentVal !== lastVal && index > 0) {
        last = [];
        result.push(last);
      }
      lastVal = currentVal;
      return last.push(value);
    });
    return result;
  };

  parsePlaylist = function(selector) {
    var lines, playlistDate, result, text;
    text = selector('p').text();
    lines = text.split('\n');
    playlistDate = new Date(/Playlist for (.+?)\s*$/g.exec(selector('h4').first().text())[1]);
    console.log(playlistDate);
    result = lines;
    result = _.filter(result, function(val) {
      return !val.match(/\s*\d+\s*\|\s*\d+\s*/g);
    });
    result = partitionBy(result, function(val) {
      return val.match(/^[\s_]*$/);
    });
    result = _.filter(result, function(val) {
      return !_.any(val, function(v2) {
        return v2.match(/^[\s_]*$/);
      });
    });
    result = _.filter(result, function(val) {
      return val[0].match(/^\s*\d+:\d+.*$/);
    });
    result = _.map(result, function(val) {
      return _.map(val, function(val2) {
        return val2.trim();
      });
    });
    result = _.map(result, function(val) {
      var first, playTime;
      first = val[0].match(/^\s*(\d+:\d+\s*[AP]M)\s*(.+$)/i);
      if (first) {
        playTime = Date.parse(playlistDate.toString('M/d/yyyy') + ' ' + first[1]);
        playTime.setTimezone('MST');
        return {
          'time': playTime.getTime(),
          'name': first[2],
          'artists': _.initial(_.rest(val)),
          'album': _.last(val)
        };
      }
    });
    return result;
  };

  getPlaylistUrl = function(playlistDate) {
    console.log(playlistDate);
    return 'http://kbaq.org/music/playlists/text?' + playlistDate.toString('MMddyyyy') + '_playlist.txt';
  };

  getPlaylist = function(playlistDate, callback) {
    playlistDate.setTimezone('MST');
    console.log(playlistDate);
    console.log(new Date().toString());
    return jsdom.env(getPlaylistUrl(playlistDate), ['http://code.jquery.com/jquery-1.5.min.js'], function(errors, window) {
      callback(parsePlaylist(window.$));
      return window.close();
    });
  };

  getPlaylist(new Date(), function(playlist) {
    return console.log(playlist);
  });

}).call(this);
